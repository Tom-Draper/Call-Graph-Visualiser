{
    "data": [
        "Utilities"
    ],
    "data.DF.__init__": [
        "DataFrame"
    ],
    "data.DF.__str__": [
        "str"
    ],
    "data.DF.save_to_html": [
        "DF.df.to_html",
        "open",
        "f.write"
    ],
    "data.Fixtures.__init__": [
        "super"
    ],
    "data.Fixtures.update": [
        "print",
        "defaultdict",
        "sorted",
        "pd.DataFrame",
        "defaultdict",
        "matchdays.append",
        ".append",
        ".append",
        ".append",
        ".append",
        ".append",
        "team_names.append",
        ".append",
        ".append",
        ".append",
        ".append",
        ".append",
        "team_names.append",
        "pd.DataFrame",
        "matchdays.append",
        "pd.concat",
        "print"
    ],
    "data.TeamRatings.__init__": [
        "super"
    ],
    "data.TeamRatings.get_season_weightings": [
        "np.array",
        "list"
    ],
    "data.TeamRatings.calc_total_rating_col": [
        "TeamRatings.get_season_weightings",
        "TeamRatings.get_season_weightings",
        "range"
    ],
    "data.TeamRatings.update": [
        "print",
        "ValueError",
        "pd.DataFrame",
        "range",
        "standings.df.iterrows",
        "range",
        "TeamRatings.calc_rating",
        ".replace",
        "range",
        ".min",
        ".max",
        ".min",
        ".all",
        "print",
        "TeamRatings.calc_total_rating_col",
        "team_ratings.sort_values",
        "team_ratings.rename",
        "print"
    ],
    "data.Form.__init__": [
        "super"
    ],
    "data.Form.get_current_matchday": [
        "len",
        "list",
        "ValueError"
    ],
    "data.Form.get_prev_matchday": [
        "len",
        "list",
        "ValueError"
    ],
    "data.Form.not_played_current_matchday": [
        "Form.n_should_have_played",
        "len"
    ],
    "data.Form.get_form": [
        "Form.get_current_matchday",
        "Form.not_played_current_matchday",
        "list",
        "list",
        "len"
    ],
    "data.Form.get_recent_teams_played": [
        "Form.get_current_matchday",
        "Form.not_played_current_matchday",
        "list",
        "DataFrame"
    ],
    "data.Form.get_current_form_rating": [
        "Form.get_current_matchday",
        "Form.not_played_current_matchday",
        "Form.get_prev_matchday",
        ".round"
    ],
    "data.Form.get_won_against_star_team": [
        "Form.get_current_matchday",
        "Form.not_played_current_matchday",
        "list"
    ],
    "data.Form.get_recent_form": [
        "Form.get_form",
        "Form.get_recent_teams_played",
        "Form.get_current_form_rating",
        "Form.get_won_against_star_team"
    ],
    "data.Form.form_string": [
        "zip",
        "util.extract_str_score",
        "int",
        "int",
        "form.append",
        "form.append",
        "form.append",
        ".join"
    ],
    "data.Form.calc_form_rating": [
        "form_str.replace",
        "enumerate",
        "util.convert_team_name_or_initials",
        "len",
        "len",
        "len"
    ],
    "data.Form.calc_won_against_star_team_col": [
        "zip",
        "won_against_star_team_col.append",
        "zip"
    ],
    "data.Form.calc_played_star_team_col": [
        "list",
        "played_star_team_col.append"
    ],
    "data.Form.calc_form_rating_col": [
        "zip",
        "Form.calc_form_rating",
        "form_rating_col.append"
    ],
    "data.Form.calc_form_str_and_gd_cols": [
        "zip",
        "form_str_col.append",
        "zip",
        "util.extract_str_score",
        "int",
        "gds.append",
        "gds.append",
        "gds.append",
        "gds_col.append"
    ],
    "data.Form.last_n_games": [
        "len",
        "list",
        "len",
        "range",
        "len",
        "len",
        "list"
    ],
    "data.Form.last_n_games_cols": [
        "len",
        "fixtures.df.iterrows",
        "slice",
        "slice",
        "slice",
        "slice",
        "list",
        "sorted",
        "Form.last_n_games",
        "teams_played_col.append",
        "scores_col.append",
        "at_home_col.append",
        "list"
    ],
    "data.Form.update": [
        "print",
        "ValueError",
        "ValueError",
        "slice",
        "score.replace",
        "sorted",
        "Form.last_n_games_cols",
        "Form.calc_form_str_and_gd_cols",
        "Form.calc_form_rating_col",
        "Form.calc_played_star_team_col",
        "Form.calc_won_against_star_team_col",
        "pd.DataFrame.from_dict",
        "print"
    ],
    "data.Standings.__init__": [
        "super"
    ],
    "data.Standings.get_table_snippet": [
        "Standings.df.index.get_loc",
        "rows.index.values.tolist",
        "list",
        "rows.index.get_loc",
        "rows.values.tolist",
        "zip",
        "row_list.insert"
    ],
    "data.Standings.fill_rows_from_data": [
        ".replace",
        ".replace"
    ],
    "data.Standings.add_gd_col": [
        "df_rows.keys"
    ],
    "data.Standings.add_position_col": [
        "enumerate"
    ],
    "data.Standings.season_standings_from_fixtures": [
        "Standings.fill_rows_from_data",
        "Standings.add_gd_col",
        "dict",
        "Standings.add_position_col",
        "pd.DataFrame.from_dict",
        "pd.MultiIndex.from_product",
        "df.drop"
    ],
    "data.Standings.season_standings": [
        "pd.DataFrame",
        "pd.Series",
        "df.pop",
        "df.insert",
        "pd.MultiIndex.from_product",
        "df.drop"
    ],
    "data.Standings.update": [
        "print",
        "ValueError",
        "pd.DataFrame",
        "range",
        "Standings.season_standings",
        "pd.concat",
        "standings.fillna",
        "print"
    ],
    "data.SeasonStats.__init__": [
        "super"
    ],
    "data.SeasonStats.format_position": [
        "str"
    ],
    "data.SeasonStats.get_stat": [
        ".sort_values",
        "SeasonStats.format_position"
    ],
    "data.SeasonStats.get_season_stats": [
        "SeasonStats.get_stat",
        "SeasonStats.get_stat",
        "SeasonStats.get_stat"
    ],
    "data.SeasonStats.row_season_goals": [
        "type",
        "util.extract_int_score"
    ],
    "data.SeasonStats.update": [
        "print",
        "ValueError",
        "list",
        "position_over_time.df.iterrows",
        "SeasonStats.row_season_goals",
        "round",
        "round",
        "round",
        "pd.DataFrame.from_dict",
        "print"
    ],
    "data.PositionOverTime.__init__": [
        "super"
    ],
    "data.PositionOverTime.get_gd_and_pts": [
        "type",
        "util.extract_int_score"
    ],
    "data.PositionOverTime.goal_diff_and_pts_cols": [
        "matchday_col.iterrows",
        "PositionOverTime.get_gd_and_pts",
        "gd_col.append",
        "pts_col.append"
    ],
    "data.PositionOverTime.update": [
        "print",
        "ValueError",
        "ValueError",
        "pd.DataFrame",
        "slice",
        "slice",
        "slice",
        "score.replace",
        "list",
        "list",
        "pd.concat",
        "sorted",
        "enumerate",
        "PositionOverTime.goal_diff_and_pts_cols",
        "position_over_time.sort_values",
        "position_over_time.reindex",
        "np.arange",
        "position_over_time.reindex",
        "print"
    ],
    "data.HomeAdvantages.__init__": [
        "super"
    ],
    "data.HomeAdvantages.home_advantages_for_season": [
        ".replace",
        ".replace"
    ],
    "data.HomeAdvantages.create_total_home_advantage_col": [
        "home_advantages.columns.get_level_values",
        ".all",
        "print",
        "list",
        "home_advantages_cols.drop",
        "home_advantages.sort_index",
        "home_advantages_cols.mean",
        "home_advantages.sort_values"
    ],
    "data.HomeAdvantages.row_template": [
        "range",
        "template.update"
    ],
    "data.HomeAdvantages.update": [
        "print",
        "defaultdict",
        "range",
        "HomeAdvantages.home_advantages_for_season",
        "pd.DataFrame.from_dict",
        "home_advantages.dropna",
        "home_advantages.fillna",
        "range",
        "HomeAdvantages.create_season_home_advantage_col",
        "HomeAdvantages.create_total_home_advantage_col",
        "print"
    ],
    "data.Upcoming.__init__": [
        "super",
        "Predictions"
    ],
    "data.Upcoming.get_details": [
        "Upcoming.get_opposition",
        "Upcoming.get_at_home",
        "Upcoming.get_previous_matches"
    ],
    "data.Upcoming.get_next_game": [
        "fixtures.df.columns.unique"
    ],
    "data.Upcoming.get_next_game_prediction": [
        "util.convert_team_name_or_initials",
        "util.convert_team_name_or_initials",
        "util.convert_team_name_or_initials",
        "util.convert_team_name_or_initials"
    ],
    "data.Upcoming.get_next_game_prediction_scoreline": [
        "Upcoming.get_next_game_prediction"
    ],
    "data.Upcoming.append_prev_match": [
        "Upcoming.readable_date",
        ".append",
        ".append"
    ],
    "data.Upcoming.ord": [
        "str"
    ],
    "data.Upcoming.readable_date": [
        "datetime.strptime",
        "Upcoming.ord",
        "dt.date"
    ],
    "data.Upcoming.convert_to_readable_dates": [
        "next_games.items",
        "enumerate",
        "Upcoming.readable_date"
    ],
    "data.Upcoming.sort_prev_matches_by_date": [
        "next_games.items",
        "sorted"
    ],
    "data.Upcoming.append_season_prev_matches": [
        "ValueError",
        ".replace",
        ".replace",
        "Upcoming.game_result_tuple",
        "Upcoming.append_prev_match"
    ],
    "data.Upcoming.update": [
        "print",
        "ValueError",
        "ValueError",
        "Upcoming.get_next_game",
        "range",
        "Upcoming.append_season_prev_matches",
        "Upcoming.sort_prev_matches_by_date",
        "pd.DataFrame.from_dict",
        "Upcoming.predictions.update",
        "pd.concat",
        "print"
    ],
    "data.Data.__init__": [
        "field",
        "Fixtures",
        "Standings",
        "TeamRatings",
        "HomeAdvantages",
        "Form",
        "PositionOverTime",
        "Upcoming",
        "SeasonStats"
    ]
}